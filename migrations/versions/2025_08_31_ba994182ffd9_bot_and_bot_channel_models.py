# mypy: ignore-errors
# ruff: noqa: INP001
"""Bot and Bot Channel models.

Revision ID: ba994182ffd9
Revises: 3f101b21d66a
Create Date: 2025-08-31 11:43:13.719624

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "ba994182ffd9"
down_revision: str | Sequence[str] | None = "3f101b21d66a"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("RU", "EN", "TR", "KA", name="botlanguage").create(op.get_bind())
    sa.Enum("STARTED", "STOPPED", name="botstatus").create(op.get_bind())
    op.create_table(
        "bots",
        sa.Column(
            "id", sa.Integer(), sa.Identity(always=False), nullable=False
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM(
                "STARTED",
                "STOPPED",
                name="botstatus",
                inherit_schema=True,
                create_type=False,
            ),
            server_default="STARTED",
            nullable=False,
        ),
        sa.Column(
            "language",
            postgresql.ENUM(
                "RU",
                "EN",
                "TR",
                "KA",
                name="botlanguage",
                inherit_schema=True,
                create_type=False,
            ),
            server_default="EN",
            nullable=False,
        ),
        sa.Column("support_chat_tg_id", sa.BigInteger(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk__bots__user_id__users"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__bots")),
    )
    op.create_index(op.f("ix__bots__token"), "bots", ["token"], unique=True)
    op.create_index(
        op.f("ix__bots__user_id"), "bots", ["user_id"], unique=False
    )
    op.create_table(
        "bot_channels",
        sa.Column(
            "id", sa.Integer(), sa.Identity(always=False), nullable=False
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("tg_id", sa.BigInteger(), nullable=False),
        sa.Column("bot_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["bot_id"],
            ["bots.id"],
            name=op.f("fk__bot_channels__bot_id__bots"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__bot_channels")),
        sa.UniqueConstraint("bot_id", name=op.f("uq__bot_channels__bot_id")),
    )
    op.create_index(
        op.f("ix__bot_channels__tg_id"), "bot_channels", ["tg_id"], unique=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix__bot_channels__tg_id"), table_name="bot_channels")
    op.drop_table("bot_channels")
    op.drop_index(op.f("ix__bots__user_id"), table_name="bots")
    op.drop_index(op.f("ix__bots__token"), table_name="bots")
    op.drop_table("bots")
    sa.Enum("STARTED", "STOPPED", name="botstatus").drop(op.get_bind())
    sa.Enum("RU", "EN", "TR", "KA", name="botlanguage").drop(op.get_bind())
    # ### end Alembic commands ###
